인턴십 일일업무보고 보내드립니다.

11/15(수)

1. 오늘 할 일
- 추천 페이지에 추천된 데이터 실시간으로 보여주기(데이터 축소)
- 좋아요 페이지 마무리


2. 오늘 한 일
- like page 마무리, recommend page생성 및 추천된 결과 게시(축소된 데이터 적용, 20개만 표시)
- 그 외 UI관련 버그 수정
(https://oss.navercorp.com/sejun-kim/intern/commit/6693d9ed777e5dabc5b283f01b29e2be4a004517)


3. 다음 할 일
- 서버 배포


4. 어려웠던 점
- 데이터 셋이 줄어든 만큼 추천되는 게시물 이외에 피트백을 받지 못한 게시물은 선택받지 못하는 투명성문제가 있을 수 있지만, 계산을 빠르게 하기 위한 
하둡 맵리듀스를 구현하는데 시간이 오래 걸려 일정에 맞추지 못할 거라 판단하고 데이터 셋을 줄이는 방향으로 추천의 실시간 결과를 확인하도록 하였습니다. 
지금은 100명 정도의 데이터를 사용해서 1초 정도의 시간에 추천 결과를 실시간으로 확인할 수 있도록 구현하였습니다.


5. 느낀 점
- 중간발표 이후 프로젝트 규모를 줄이면서 이제 남은 일정상 목표는 서버배포가 남았습니다. 하둡의 맵리듀스와 파일서버 클러스터링을 발표까지 구현이 
힘들 것이라 판단되어 아쉬움이 남는 거 같습니다. 때문에, 일정이 끝나고 두 피처 중 하나를 골라 남은 기간 동안 구현하는 시간을 가져볼 생각입니다. 


6. 인턴십을 통해 배운 내용
- 프로젝트 진행
    - 이번 인턴십에서 2달이라는 기간 동안 개발을 진행하면서 여러 문제를 만나 문제해결방법을 배우고 한정된 시간 안에 개발을 진행하며 일정관리 하는 방법도 배울 수 있었습니다.
     처음 시작으로는 멘토님과 같이 Outstagram에 어떤 기능이 필요할지 고민하고 이를 어떻게 구현할지 생각하며 기획하였습니다. 프로젝트를 모두 구현하기는 시간이 부족할 것이라는 
     생각이 들었지만, 노력을 통해 할 수 있는 한 최대한 개발해서 팀원분들에게 완성된 프로젝트를 보여주겠다는 목표를 세우고 인턴활동을 시작하였습니다. 

      평소 혼자 공부를 하거나 부스트캠프를 진행하면서 막히는 부분을 만나면 될 때까지 한다는 생각으로 프로젝트를 진행하며 문제를 해결하고 프로젝트를 완성했었습니다. 이번 인턴에서도
     같은 생각으로 문제를 해결하려고 했고 결과적으로 일정을 많이 늦추는 결과를 가져왔습니다. 키워드를 아는 부분에 대해서는 금방 문제를 해결할 수 있었지만 처음 다루어보는 하둡과 
     주키퍼 같은 기술에 대해서는 키워드를 잘 모르기 때문에 환경설정부터 많은 어려움이 있었습니다. 될 때까지 한다는 생각으로 모두 해결은 했지만, 시간이 생각보다 하루 이틀 정도 지난 
     후였습니다. 또한, 기본적인 아파치나 톰캣의 설치는 설치 스크립트를 이용하면 금방 할 수 있는 걸 직접 설치하다가 오래 걸리는 등 문제를 돌아서 해결하는 느낌을 받게 되었고 이후에는
     처음 다루는 부분에 대해서는 정보를 찾아보고 잘모르겠으면 멘토님에게 질문하여 빠르게 문제를 해결하는 방법으로 프로젝트를 진행했습니다. 그 결과 멘토님으로부터 디버깅시에 정상적으로 
     동작하는 부분을 체크하며 이분 탐색처럼 문제가 발생한 부분의 범위를 좁혀 문제를 찾아야 하며 라이브러리를 사용할 때 라이브러리의 클래스를 상속받은 클래스를 만들어 생성자에 super
     키워드와 로그를 이용해 라이브러리가 작동하는 데 문제가 없는지 확인하는 방범과 기능을 설계할 때는 예제와 같이 쉬운 것부터 시작해서 조금씩 늘려가며 필요한 기능을 구현하는 게 좋다는 
     것을 배웠습니다. 

      프로젝트의 주 기능인 추천을 구현하기 위해서는 혼자서 공부하고 프로젝트에 적용해야 했습니다. 여러 추천 방법 중 협업필터링을 선택하게 된 이유는 지금 만들 수 있는 데이터 셋을 
     이용해서 추천할 수 있는 추천기를 선택해야 했고 협업필터링에 대한 평가가 고전적인 방법이지만 많이 사용되고 빠르게 구현 가능하며 결과도 나쁘지 않다는 평가가 많았기 때문입니다. 이런 
     이유로 협업필터링을 주 추천기로 선택하고 공부를 시작하였습니다. 논문을 통해 적용사례와 implicit feedback의 데이터변환방법, 추천기를 작동시키는 데 필요한 데이터 셋의 크기 
     등을 찾아보았습니다. 또한, 사용되는 알고리즘과 입력 데이터 셋, 출력 데이터, 간단한 예제 구현, 단점 등을 공부하였습니다. 이런 학습을 통해 프로젝트에 아이템 베이스 추천기와
     유저베이스 추천기를 혼합하여 사용할 방법과 데이터 생성과 반환 결과 해석을 하며 프로젝트에 적용할 수 있게 되었습니다. 단점인 cold start문제를 해결하기 위해 content based 
     추천기를 나이브베이지안을 통해 구현할 계획을 세우며 여러 상황에서 추천할 수 있도록 계획을 세웠지만 일정상 구현은 하지 못하였습니다.

      마지막으로 위와 같은 활동을 하면서 오늘 한 일과 다음에 할 일을 정리하며 일정관리하는 경험을 해볼 수 있었습니다. 처음 시작할 때 멘토님이 2달간 주별 계획을 세우시고 이에 맞추어
     프로젝트를 진행하려고 노력하였으나 생각만큼 쉽지 않았습니다. 가장 큰 이유는 많은 개발 분량 때문에 하나의 일정이 지연되면 도미노처럼 모두 밀리게 되었고 점점 처음 계획을 맞추기
     힘들게 되었습니다. 이 때문에 중간발표 이후부터는 제가 주도적으로 개발일정을 소화하기 위해 노력하였습니다. 이때 일일보고를 활용해 보았습니다. 다음 할 일에 2~3주 정도 안에 
     해결해야 할 일들을 작성하고 오늘 한 일을 통해 진행 중인 일이나 완료한 일을 정리하였습니다. 오늘 한 일은 최대한 3개의 작업을 완료하기 위 해 노력하였습니다. 이렇게 우선순위가 
     높은 일을 먼저 실행하고 추가로 필요한 작업이 있다면 다음 할 일에 추가해가며 일정을 관리하여 지금의 결과까지 오게 되었습니다.

      2달이라는 기간 동안 최대한 많은 시간을 투자하여 처음의 목표를 이루기 위해 노력하였습니다. 늦게까지 남아 하루에 목표치를 달성하기 위해 개발을 진행하였고 주말도 반납하고 출근하여
     그 주에 부족한 작업을 진행하거나 다음 주에 해야 할 작업을 빨리 시작할 수 있도록 하였습니다. 하둡을 이용한 추천기 사용이나 클러스터링을 적용한 파일서버는 발표전까지 개발할 시간이 부족
     할 거 같아 아쉽지만 남은 기간에 서버배포 완료하여 추천되는 시연에서 문제없이 진행하도록 마무리하고 발표 이후 시간을 이용해 못해본 부분을 구현해보는 시간을 가지도록 하겠습니다.
    

- 느낀점 
     현업에서는 모든 일에 디테일이 포함되어야 한다는 것을 느끼게 되었습니다. 프로젝트를 디테일하게 여러 요구사항을 반영하는 것뿐만 아니라 내가 
    지금 하는 일, 앞으로 할 일, 진행 중 애로사항 등 업무 내용에 대해 다른 사람에게 전달하고 도움받을 부분은 도움받는 것입니다. 
     인턴십을 시작하면서 공부하고 환경설정하며 프로젝트를 시작할 때는 학교나 부스트캠프와 큰 차이를 느끼지 못했습니다. 부스트캠프에서도 스프링을 이용해 
    웹 서비스를 만들고 페이지에 필요한 데이터를 보여주는 작업을 주로하였고 인턴 과제도 큰 틀에서는 비슷했기 때문에 인턴이 부스트캠프의 연장선 같다는 생각을 하게 되었습니다. 
    그러던 중 인턴과 부스트캠프의 다른 점을 느끼게 된 계기는 제가 발송한 일일보고를 통해 다른 분들이 과제의 진행을 알기가 어렵다는 피드백을 듣게 되면서입니다. 
    피드백을 받고 일일보고를 보며 곰곰이 생각해보니 진행하고 있는 저만 알기 쉽게 추상적으로 적었다는 것을 느끼게 되었습니다. 이후에는 작업한 일에 대해 최대한 자세하게 
    작성하기 위해 노력하였고 커밋한 코드의 주소를 포함해 설명과 작업한 내용을 같이 공유할 수 있도록 하였습니다. 그리고 이야기할 때도 최대한 정리하여 제가 진행 중인 과제를 
    설명하기 위해 노력하였습니다. 아직 다른 분들이 느끼기에 부족할 수도 있지만, 인턴십 과정을 통해 개발적인 부분 말고도 회사에서 일한다는 경험을 할 수 있었습니다.
     
    
감사합니다.